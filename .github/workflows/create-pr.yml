name: Create PR with Trimmed Artifacts

description: |
  Downloads all artifacts, trims library names to RTID directories, and creates a pull request with the result.

on:
  workflow_call:
    inputs:
      lib-name:
        description: "Library name (e.g., Project)"
        required: true
        type: string
      lib-version:
        description: "Library version (e.g., v1.0.0)"
        required: true
        type: string
      pr-branch:
        description: "Branch for PR"
        required: false
        default: native-artifacts-branch
        type: string
      pr-base-branch:
        description: "Base branch for PR"
        required: false
        default: master
        type: string
      pr-reviewers:
        description: "Reviewers for PR"
        required: false
        default: ""
        type: string
      pr-output-map:
        description: "Key-value map of library names to output paths"
        required: true
        type: string

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: "repo"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: "JunaMeinhold/cmake-actions"
          path: "cmake-actions"
          ref: "v1.x.x"
          submodules: false

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Rename and move artifacts
        run: python cmake-actions/scripts/rename_and_move.py "./artifacts" "./repo" '${{ inputs.pr-output-map }}'

      - name: Create a Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          path: "repo"
          title: "Update native libraries for ${{ inputs.lib-name }} to the latest version (${{ inputs.lib-version }})"
          body: "This pull request updates the native libraries to the latest version (${{ inputs.lib-version }})."
          commit-message: "chore: update native libraries to the latest version (${{ inputs.lib-version }})"
          branch: ${{ inputs.pr-branch }}
          base: ${{ inputs.pr-base-branch }}
          reviewers: ${{ inputs.pr-reviewers }}
          sign-commits: true
          delete-branch: true
